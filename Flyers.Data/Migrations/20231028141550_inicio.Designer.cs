// <auto-generated />
using System;
using Flyers.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Flyers.Data.Migrations
{
    [DbContext(typeof(DadosDbContext))]
    [Migration("20231028141550_inicio")]
    partial class inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Flyers.Core.Entities.ArquivoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Dados")
                        .HasColumnType("BLOB");

                    b.Property<int>("Entidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdDominio")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Pasta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdDominio");

                    b.ToTable("Arquivos");
                });

            modelBuilder.Entity("Flyers.Core.Entities.CategoriaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Flyers.Core.Entities.ClienteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Pessoa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ClienteEntity");
                });

            modelBuilder.Entity("Flyers.Core.Entities.DominioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Video")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.ToTable("Dominios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "webmaster@mowbi.com.br",
                            IdHash = new Guid("0b49c295-3e71-42ff-9a46-8a56ff4fe1b4"),
                            Inativo = false,
                            Inclusao = new DateTime(2023, 10, 28, 11, 15, 50, 279, DateTimeKind.Local).AddTicks(4923),
                            Nome = "MoWBI",
                            Telefone = "17 99999-9999"
                        });
                });

            modelBuilder.Entity("Flyers.Core.Entities.EnderecoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Uf")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Flyers.Core.Entities.OfertaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdDominio")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdDominio");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Flyers.Core.Entities.OfertaProdutoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdOferta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProduto")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdOferta");

                    b.HasIndex("IdProduto");

                    b.ToTable("OfertasProdutos");
                });

            modelBuilder.Entity("Flyers.Core.Entities.ProdutoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Destaque")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdDominio")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdDominio");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Flyers.Core.Entities.RedeSocialEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Canal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdDominio")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdDominio");

                    b.ToTable("RedeSociais");
                });

            modelBuilder.Entity("Flyers.Core.Entities.UsuarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("IdHash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Perfil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "administrador@teste.com.br",
                            IdHash = new Guid("3b26afa0-0285-4971-b773-d17df8a07015"),
                            Inativo = false,
                            Inclusao = new DateTime(2023, 10, 28, 11, 15, 50, 282, DateTimeKind.Local).AddTicks(4072),
                            Nome = "Administrador teste",
                            Perfil = 1,
                            Senha = "25D55AD283AA400AF464C76D713C07AD",
                            Telefone = "17 99999-9999"
                        });
                });

            modelBuilder.Entity("Flyers.Core.Entities.ClienteFisicaEntity", b =>
                {
                    b.HasBaseType("Flyers.Core.Entities.ClienteEntity");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Genero")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("TEXT");

                    b.ToTable("Clientes");

                    b.HasDiscriminator().HasValue("ClienteFisicaEntity");
                });

            modelBuilder.Entity("Flyers.Core.Entities.ArquivoEntity", b =>
                {
                    b.HasOne("Flyers.Core.Entities.DominioEntity", "Dominio")
                        .WithMany("Arquivos")
                        .HasForeignKey("IdDominio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dominio");
                });

            modelBuilder.Entity("Flyers.Core.Entities.DominioEntity", b =>
                {
                    b.HasOne("Flyers.Core.Entities.EnderecoEntity", "Endereco")
                        .WithMany("Dominios")
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Flyers.Core.Entities.OfertaEntity", b =>
                {
                    b.HasOne("Flyers.Core.Entities.DominioEntity", "Dominio")
                        .WithMany("Ofertas")
                        .HasForeignKey("IdDominio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dominio");
                });

            modelBuilder.Entity("Flyers.Core.Entities.OfertaProdutoEntity", b =>
                {
                    b.HasOne("Flyers.Core.Entities.OfertaEntity", "Oferta")
                        .WithMany("OfertaProdutos")
                        .HasForeignKey("IdOferta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Flyers.Core.Entities.ProdutoEntity", "Produto")
                        .WithMany("OfertaProdutos")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oferta");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Flyers.Core.Entities.ProdutoEntity", b =>
                {
                    b.HasOne("Flyers.Core.Entities.CategoriaEntity", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Flyers.Core.Entities.DominioEntity", "Dominio")
                        .WithMany("Produtos")
                        .HasForeignKey("IdDominio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Dominio");
                });

            modelBuilder.Entity("Flyers.Core.Entities.RedeSocialEntity", b =>
                {
                    b.HasOne("Flyers.Core.Entities.DominioEntity", "Dominio")
                        .WithMany("RedeSociais")
                        .HasForeignKey("IdDominio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dominio");
                });

            modelBuilder.Entity("Flyers.Core.Entities.CategoriaEntity", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Flyers.Core.Entities.DominioEntity", b =>
                {
                    b.Navigation("Arquivos");

                    b.Navigation("Ofertas");

                    b.Navigation("Produtos");

                    b.Navigation("RedeSociais");
                });

            modelBuilder.Entity("Flyers.Core.Entities.EnderecoEntity", b =>
                {
                    b.Navigation("Dominios");
                });

            modelBuilder.Entity("Flyers.Core.Entities.OfertaEntity", b =>
                {
                    b.Navigation("OfertaProdutos");
                });

            modelBuilder.Entity("Flyers.Core.Entities.ProdutoEntity", b =>
                {
                    b.Navigation("OfertaProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
